{"ast":null,"code":"import { userService } from '../services/user.service';\nexport const userActions = {\n  login\n};\n\nfunction login(email, password) {\n  return dispatch => {\n    dispatch(request({\n      email\n    }));\n    userService.login(email, password).then(user => {\n      dispatch(success(user));\n    }, error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/home/matthew/Documents/GitHub/FyreSale/client/src/redux/actions/user.actions.js"],"names":["userService","userActions","login","email","password","dispatch","request","then","user","success","error","failure","toString","alertActions","type","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA;AADyB,CAApB;;AAIP,SAASA,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,OAAO,CAAC;AAAEH,MAAAA;AAAF,KAAD,CAAR,CAAR;AAEAH,IAAAA,WAAW,CAACE,KAAZ,CAAkBC,KAAlB,EAAyBC,QAAzB,EACCG,IADD,CAEEC,IAAI,IAAI;AACNH,MAAAA,QAAQ,CAACI,OAAO,CAACD,IAAD,CAAR,CAAR;AACD,KAJH,EAKEE,KAAK,IAAI;AACPL,MAAAA,QAAQ,CAACM,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACAP,MAAAA,QAAQ,CAACQ,YAAY,CAACH,KAAb,CAAmBA,KAAK,CAACE,QAAN,EAAnB,CAAD,CAAR;AACD,KARH;AAUD,GAbD;;AAeA,WAASN,OAAT,CAAiBE,IAAjB,EAAuB;AAAE,WAAO;AAAEM,MAAAA,IAAI,EAAEC,aAAa,CAACC,aAAtB;AAAqCR,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASC,OAAT,CAAiBD,IAAjB,EAAuB;AAAE,WAAO;AAAEM,MAAAA,IAAI,EAAEC,aAAa,CAACE,aAAtB;AAAqCT,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASG,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAEC,aAAa,CAACG,aAAtB;AAAqCR,MAAAA;AAArC,KAAP;AAAqD;AAChF","sourcesContent":["import { userService } from '../services/user.service';\n\nexport const userActions = {\n  login\n};\n\nfunction login(email, password) {\n  return dispatch => {\n    dispatch(request({ email }));\n\n    userService.login(email, password)\n    .then(\n      user => {\n        dispatch(success(user));\n      },\n      error => {\n        dispatch(failure(error.toString()));\n        dispatch(alertActions.error(error.toString()));\n      }\n    );\n  };\n\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n"]},"metadata":{},"sourceType":"module"}