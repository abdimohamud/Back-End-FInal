{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/matthew/Documents/GitHub/FyreSale/client/src/layout/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../redux/actions/authActions\";\n\nfunction Register(props) {\n  _s();\n\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [accountType, setAccountType] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  function componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      setErrors(nextProps.errors);\n    }\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      fullname: fullname,\n      email: email,\n      password: password,\n      password2: password2,\n      accountType: accountType\n    };\n    console.log(userData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Full name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: fullname,\n        onChange: e => setFullname(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password2,\n        onChange: e => setPassword2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"accountType\",\n        checked: accountType === \"producer\",\n        onChange: () => setAccountType(\"producer\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Producer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"accountType\",\n        checked: accountType === \"buyer\",\n        onChange: () => setAccountType(\"buyer\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Buyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"6xteutadheV4IyHejqc/MWk5VgU=\");\n\n_c = Register;\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  Register\n})(withRouter(Register));\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/matthew/Documents/GitHub/FyreSale/client/src/layout/Register.jsx"],"names":["React","useState","Link","withRouter","PropTypes","connect","registerUser","Register","props","fullname","setFullname","email","setEmail","password","setPassword","password2","setPassword2","accountType","setAccountType","errors","setErrors","componentWillReceiveProps","nextProps","onSubmit","e","preventDefault","userData","console","log","target","value","propTypes","func","isRequired","auth","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../redux/actions/authActions\";\n\nfunction Register(props) {\n  const [fullname, setFullname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [accountType, setAccountType] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  function componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      setErrors(nextProps.errors);\n    }\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const userData = {\n      fullname: fullname,\n      email: email,\n      password: password,\n      password2: password2,\n      accountType: accountType\n    };\n    console.log(userData);\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n    <div>\n      <label>Full name:</label>\n      <input\n        type=\"text\"\n        value={fullname}\n        onChange={e => setFullname(e.target.value)}\n      />\n    </div>\n      <div>\n        <label>Email:</label>\n        <input\n          type=\"text\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Password:</label>\n        <input\n          type=\"text\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Confirm Password:</label>\n        <input\n          type=\"text\"\n          value={password2}\n          onChange={e => setPassword2(e.target.value)}\n        />\n      </div>\n      <div>\n        <input\n          type=\"radio\"\n          name=\"accountType\"\n          checked={accountType === \"producer\"}\n          onChange={() => setAccountType(\"producer\")}\n        />\n        <label>Producer</label>\n      </div>\n      <div>\n        <input\n          type=\"radio\"\n          name=\"accountType\"\n          checked={accountType === \"buyer\"}\n          onChange={() => setAccountType(\"buyer\")}\n        />\n        <label>Buyer</label>\n      </div>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { Register }\n)(withRouter(Register));\n"]},"metadata":{},"sourceType":"module"}